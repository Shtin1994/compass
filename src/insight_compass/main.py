# --- START OF FILE src/insight_compass/main.py ---

import logging
import sys
from contextlib import asynccontextmanager
from typing import List

from fastapi import FastAPI, Response, status
from fastapi.middleware.cors import CORSMiddleware

# –®–ê–ì 1: –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
# –≠—Ç–æ—Ç –±–ª–æ–∫ - –ø–µ—Ä–≤–∞—è –ª–∏–Ω–∏—è –æ–±–æ—Ä–æ–Ω—ã –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
# –ï—Å–ª–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤ .env —Ñ–∞–π–ª–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞ (–Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö, –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π –ø–æ—Ä—Ç),
# –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç —Ä–∞–±–æ—Ç—É —Å –ø–æ–Ω—è—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ.
try:
    from .core.config import settings
except Exception as e:
    # –í—ã–≤–æ–¥–∏–º –æ—à–∏–±–∫—É –≤ stderr, —Ç–∞–∫ –∫–∞–∫ –ª–æ–≥–≥–µ—Ä –µ—â–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω.
    print(f"FATAL: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à .env —Ñ–∞–π–ª.\n–î–µ—Ç–∞–ª–∏: {e}", file=sys.stderr)
    sys.exit(1)  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏.

# –®–ê–ì 2: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
# –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º LOG_LEVEL –∏ ENVIRONMENT –∏–∑ settings, —á—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –ª–æ–≥–∞–º–∏.
# –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å LOG_LEVEL="DEBUG" –≤ .env.dev –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏.
logging.basicConfig(
    level=settings.LOG_LEVEL.upper(),
    format="%(asctime)s - %(levelname)s - %(name)s - %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
)
# –ü—Ä–∏–º–µ–Ω—è–µ–º —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–æ–≤ –¥–ª—è –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞.
# –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –ª–æ–≥–≥–µ—Ä—ã (–≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö) —É–Ω–∞—Å–ª–µ–¥—É—é—Ç —ç—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å.
logging.getLogger().setLevel(settings.LOG_LEVEL.upper())
logger = logging.getLogger(__name__)

# –®–ê–ì 3: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä—ã –ü–û–°–õ–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–≥–µ—Ä–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
# –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª–µ–π —Ä–æ—É—Ç–µ—Ä–æ–≤ –æ–Ω–∏ —É–∂–µ –±—É–¥—É—Ç –∏–º–µ—Ç—å –¥–æ—Å—Ç—É–ø
# –∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º—É –ª–æ–≥–≥–µ—Ä—É –∏ –≤–∞–ª–∏–¥–Ω—ã–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º.
from .api.routers import analytics, channels, data, insights, posts


@asynccontextmanager
async def lifespan(app: FastAPI):
    """
    –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FastAPI.
    –ò–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∑–∞–∫—Ä—ã—Ç–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤.
    """
    logger.info("=" * 50)
    logger.info("üöÄ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    logger.info(f"–û–∫—Ä—É–∂–µ–Ω–∏–µ: {settings.ENVIRONMENT.upper()}")
    logger.info(f"–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {settings.LOG_LEVEL.upper()}")
    
    # –ó–¥–µ—Å—å –≤ –±—É–¥—É—â–µ–º –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ë–î, Redis, LLM –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ —Ç.–¥.
    # –ù–∞–ø—Ä–∏–º–µ—Ä: app.state.redis = await create_redis_pool()
    
    yield
    
    # –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –ø—Ä–∏ graceful shutdown (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–µ) –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    logger.info("üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∫–æ–¥ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π.
    # –ù–∞–ø—Ä–∏–º–µ—Ä: await app.state.redis.close()
    logger.info("üëã –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    logger.info("=" * 50)

# –®–ê–ì 4: –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ FastAPI —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º.
app = FastAPI(
    title="Insight Compass API",
    description="API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–æ—Ä–æ–º –∏ –∞–Ω–∞–ª–∏–∑–æ–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ Telegram-–∫–∞–Ω–∞–ª–æ–≤.",
    version="1.0.0",
    lifespan=lifespan,
    # –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é.
    # –í production –º–æ–∂–Ω–æ —Å–∫—Ä—ã—Ç—å –µ–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é, —É—Å—Ç–∞–Ω–æ–≤–∏–≤ docs_url=None.
    docs_url="/api/docs" if settings.is_dev else None,
    redoc_url="/api/redoc" if settings.is_dev else None,
)

# –®–êG 5: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.
# –ñ–µ—Å—Ç–∫–æ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ origins - –ø–ª–æ—Ö–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞. –ú—ã –±–µ—Ä–µ–º –∏—Ö –∏–∑ settings.
# –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –¥–æ–±–∞–≤–∏—Ç—å URL –≤–∞—à–µ–≥–æ frontend-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è production,
# –Ω–µ –º–µ–Ω—è—è –∫–æ–¥.
# –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –í .env —Ñ–∞–π–ª–µ —Ö—Ä–∞–Ω–∏—Ç–µ origins –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω–æ–π –∑–∞–ø—è—Ç—ã–º–∏.
# –ù–∞–ø—Ä–∏–º–µ—Ä: BACKEND_CORS_ORIGINS="http://localhost:3000,http://my-prod-site.com"
cors_origins_str = settings.BACKEND_CORS_ORIGINS
# –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–ø–∏—Å–æ–∫, —É–¥–∞–ª—è—è –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã.
origins: List[str] = [origin.strip() for origin in cors_origins_str.split(",")]

logger.info(f"–ù–∞—Å—Ç—Ä–æ–µ–Ω—ã CORS –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {origins}")

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,  # –†–∞–∑—Ä–µ—à–∞–µ—Ç –ø–µ—Ä–µ–¥–∞—á—É cookies –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
    allow_methods=["*"],     # –†–∞–∑—Ä–µ—à–∞–µ—Ç –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ HTTP-–º–µ—Ç–æ–¥—ã.
    allow_headers=["*"],     # –†–∞–∑—Ä–µ—à–∞–µ—Ç –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏.
)

# –®–ê–ì 6: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.
@app.get("/", tags=["Root"], include_in_schema=False) # –°–∫—Ä—ã–≤–∞–µ–º –∏–∑ –∞–≤—Ç–æ-–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
def read_root():
    """–ö–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω."""
    return {"message": "Welcome to Insight Compass API"}

@app.get("/health", status_code=status.HTTP_200_OK, tags=["Health Check"])
async def health_check(response: Response):
    """
    –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "–∑–¥–æ—Ä–æ–≤—å—è" —Å–µ—Ä–≤–∏—Å–∞.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (Prometheus), –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ (Kubernetes, Docker)
    –∏ CI/CD –ø–∞–π–ø–ª–∞–π–Ω–∞–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ —Å–µ—Ä–≤–∏—Å –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç—Ä–∞—Ñ–∏–∫.
    """
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞.
    # Health check –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ.
    response.headers["Cache-Control"] = "no-cache, no-store, must-revalidate"
    response.headers["Pragma"] = "no-cache"
    response.headers["Expires"] = "0"
    
    # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ë–î, Redis –∏ —Ç.–¥.
    # try:
    #     await db.execute(select(1))
    # except Exception:
    #     raise HTTPException(status_code=503, detail="Database is unavailable")
    
    return {"status": "ok"}

# –®–ê–ì 7: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ—É—Ç–µ—Ä–æ–≤ —Å –æ–±—â–∏–º –ø—Ä–µ—Ñ–∏–∫—Å–æ–º.
# –≠—Ç–æ –¥–µ–ª–∞–µ—Ç API –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.
# –í—Å–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ URL –≤–∏–¥–∞ /api/v1/channels, /api/v1/posts –∏ —Ç.–¥.
API_PREFIX = "/api/v1"
app.include_router(channels.router, prefix=API_PREFIX)
app.include_router(posts.router, prefix=API_PREFIX)
app.include_router(insights.router, prefix=API_PREFIX)
app.include_router(analytics.router, prefix=API_PREFIX)
app.include_router(data.router, prefix=API_PREFIX)

logger.info(f"–í—Å–µ —Ä–æ—É—Ç–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{API_PREFIX}'.")

# --- END OF FILE src/insight_compass/main.py ---