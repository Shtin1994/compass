# scripts/check_connection.py
import asyncio
import sys
from pathlib import Path

# –ò–ó–ú–ï–ù–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø—É—Ç—å –Ω–µ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞, –∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é `src`, –≥–¥–µ –ª–µ–∂–∞—Ç –ø–∞–∫–µ—Ç—ã.
# –≠—Ç–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—à–∏–±–∫—É ModuleNotFoundError.
sys.path.insert(0, str(Path(__file__).resolve().parents[1] / 'src'))

from telethon import TelegramClient
from telethon.sessions import StringSession
from telethon.errors import UserDeactivatedBanError, AuthKeyUnregisteredError

# –¢–µ–ø–µ—Ä—å —ç—Ç–æ—Ç –∏–º–ø–æ—Ä—Ç –¥–æ–ª–∂–µ–Ω —Å—Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫
from insight_compass.db.session import sessionmanager
from insight_compass.db.repositories.telegram_account_repository import TelegramAccountRepository

async def check_connection():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –º–æ–∂–µ—Ç –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram, –∏—Å–ø–æ–ª—å–∑—É—è
    –ø–µ—Ä–≤—É—é –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram...")

    # --- –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –∞–∫–∫–∞—É–Ω—Ç –∏–∑ –ë–î ---
    account_to_test = None
    try:
        async with sessionmanager.session() as db:
            repo = TelegramAccountRepository(db)
            print("üîç –ü–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
            # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: get_account_for_work –æ–±–Ω–æ–≤–ª—è–µ—Ç last_used_at, —á—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞ –Ω–µ —Å—Ç—Ä–∞—à–Ω–æ.
            account_to_test = await repo.get_account_for_work()
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –ö –ë–ê–ó–ï –î–ê–ù–ù–´–•: {e}")
        print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å PostgreSQL –∑–∞–ø—É—â–µ–Ω –∏ –¥–æ—Å—Ç—É–ø–µ–Ω.")
        return

    if not account_to_test:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.")
        print("   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ `seed_telegram_account.py` –∏ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω.")
        # –í–∞–∂–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –¥–≤–∏–∂–∫–æ–º –ë–î
        if sessionmanager._engine:
            await sessionmanager._engine.dispose()
        return

    print(f"‚úÖ –ê–∫–∫–∞—É–Ω—Ç —Å ID={account_to_test.id} –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–±—É–µ–º –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è...")

    # --- –®–∞–≥ 2: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç Telegram ---
    # –ú—ã –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º settings, –∞ –∑–∞–¥–∞–µ–º –∏—Ö –≤—Ä—É—á–Ω—É—é –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã —Ç–µ—Å—Ç–∞.
    # –≠—Ç–æ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
    API_ID = 28124002
    API_HASH = "d7586f457608cd4770e30c28287c2738"
    
    client = TelegramClient(
        StringSession(account_to_test.session_string),
        API_ID,
        API_HASH
    )

    # --- –®–∞–≥ 3: –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é ---
    try:
        await client.connect()
        me = await client.get_me()

        if me:
            print("\n" + "="*50)
            print("‚úÖ‚úÖ‚úÖ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï –£–°–ü–ï–®–ù–û! ‚úÖ‚úÖ‚úÖ")
            print("="*50)
            print(f"   –ê–∫–∫–∞—É–Ω—Ç: {me.first_name} {me.last_name or ''}")
            print(f"   Username: @{me.username or '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
            print(f"   ID: {me.id}")
            print("\n–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Å–±–æ—Ä—É –¥–∞–Ω–Ω—ã—Ö.")
        else:
            print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ. –°–µ—Å—Å–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞.")

    except (AuthKeyUnregisteredError, ConnectionError) as e:
        # ConnectionError –º–æ–∂–µ—Ç –≤–æ–∑–Ω–∏–∫–∞—Ç—å, –µ—Å–ª–∏ —Å–µ—Å—Å–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞
        print("\n" + "="*50)
        print("‚ùå‚ùå‚ùå –û–®–ò–ë–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò! ‚ùå‚ùå‚ùå")
        print("="*50)
        print(f"   –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {e.__class__.__name__}")
        print("   –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª–∞.")
        print("   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ —Å –ø–æ–º–æ—â—å—é `create_session_string.py`")
        print("   –∏ –æ–±–Ω–æ–≤–∏—Ç–µ –µ–µ –≤ —Ç–∞–±–ª–∏—Ü–µ `telegram_accounts` –≤ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
    
    except UserDeactivatedBanError:
        print("\n" + "="*50)
        print("‚ùå‚ùå‚ùå –ê–ö–ö–ê–£–ù–¢ –ó–ê–ë–ê–ù–ï–ù! ‚ùå‚ùå‚ùå")
        print("="*50)
        print("   –≠—Ç–æ—Ç –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω Telegram. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∞–∫–∫–∞—É–Ω—Ç.")

    except Exception as e:
        print(f"\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")

    finally:
        if client and client.is_connected():
            await client.disconnect()
        # –í–∞–∂–Ω–æ –≤—Å–µ–≥–¥–∞ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π SQLAlchemy
        if sessionmanager._engine:
            await sessionmanager._engine.dispose()
        print("\nüèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


if __name__ == "__main__":
    asyncio.run(check_connection())